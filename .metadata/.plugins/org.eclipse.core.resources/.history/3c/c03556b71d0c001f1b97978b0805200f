package com.sds.movieapp;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.sds.movieapp.domain.CustomUserDetails;
import com.sds.movieapp.domain.Member;

import jakarta.servlet.http.HttpServletRequest;
import lombok.extern.slf4j.Slf4j;

//모든 컨트롤러에서 사용자명을 저장할 수 있도록 aop로 구현
@Slf4j
@Aspect
@Component
public class AuthAspect {
	@Pointcut("execution(public * com.sds.movieapp.controller..*(..))")
	public void includeExecution() {}
	
	@Pointcut("!execution(public * com.sds.movieapp.Rest*controller..*(..))")
	public void excludeExecution() {}
	
	public Object checkSession(ProceedingJoinPoint joinpoint) {
		Object obj = null;
		
		ServletRequestAttributes attr = (ServletRequestAttributes)RequestContextHolder.getRequestAttributes();
		HttpServletRequest request = attr.getRequest();
		
		Authentication auth = SecurityContextHolder.getContext().getAuthentication();
		//아래의 if문은 로그인한 경우 동작함
		if(auth.getPrincipal() instanceof CustomUserDetails) {
			CustomUserDetails userDetails = (CustomUserDetails)auth.getPrincipal();
			Member member = userDetails.getMember();
			
			request.setAttribute("nickname", member.getNickname());
		}
		
		
		
		return null;
	}
}
